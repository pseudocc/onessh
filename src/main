#!/bin/bash -a
# vim: noet

# READ environment variables
[ -f "$HOME/.onesshrc" ] && source "$HOME/.onesshrc"

if [ -z "$ONESSH_LIB" ]; then 
	ONESSH_LIB="$(dirname "$0")"
fi

source "$ONESSH_LIB/utils.sh"

print_help() {
	echo "Available commands:"
	for file in "$ONESSH_LIB/commands"/*; do
		if [ -x "$file" ]; then
			printf "    $FG_RED%-12s$FG_RESET %s\n" \
				"$(basename "$file")" "$($file --short-help)"
		fi
	done
	printf "    $FG_YELLOW%-12s$FG_RESET %s\n" \
		"help" "Show this help message"
	printf "    $FG_YELLOW%-12s$FG_RESET %s\n" \
		"exit" "Exit this shell"
}

run_command() {
	local line=("$@")
	local command="${line[0]}"
	local args="${line[*]:1}"
	print_debug "command=$command args=\"$args\""

	if has_command "$command"; then
		# shellcheck disable=SC2086
		"$ONESSH_LIB/commands/$command" $args 
	elif [ "$command" = "exit" ]; then
		exit "${args:-0}"
	elif [ "$command" = "help" ]; then
		print_help
	else
		print_error "Command not found: $command"
	fi
}

main() {
	if [ -n "$ONESSH_DEBUG" ]; then
		print_debug "Debug mode is enabled"
		print_env "ONESSH_LIB" "ONESSH_ALLOWED_USERS" "USER"
	fi

	local line command args
	while print_prompt && IFS=" " read -ra line; do
		if [ "${#line[@]}" -eq 0 ]; then
			continue
		fi

		run_command "${line[@]}"
	done
}

if [ -n "$*" ]; then
	if [ "$1" = "shared_keys" ]; then
		shared_keys
		exit $?
	fi

	run_command "$@"
	exit $?
elif [ -t 0 ]; then
	trap exit_alt_screen EXIT
	enter_alt_screen
	print_welcome
	main
	exit $?
fi
